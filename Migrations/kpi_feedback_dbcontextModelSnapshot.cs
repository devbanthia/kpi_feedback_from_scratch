// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kpi_feedback_from_scratch.data;

#nullable disable

namespace kpi_feedback_from_scratch.Migrations
{
    [DbContext(typeof(kpi_feedback_dbcontext))]
    partial class kpi_feedback_dbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("kpi_feedback_from_scratch.Models.Domain.KPI.KPI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("KPI_CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("KPI_SubcategoryId")
                        .HasColumnType("int");

                    b.Property<string>("KPI_description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("KPI_statusId")
                        .HasColumnType("int");

                    b.Property<string>("KPI_title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("rating_frequency_id")
                        .HasColumnType("int");

                    b.Property<int>("rating_type_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("kpi");
                });

            modelBuilder.Entity("kpi_feedback_from_scratch.Models.Domain.KPI.KPI_Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("kpi_category");
                });

            modelBuilder.Entity("kpi_feedback_from_scratch.Models.Domain.KPI.KPI_status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("kpi_status");
                });

            modelBuilder.Entity("kpi_feedback_from_scratch.Models.Domain.KPI.KPI_subcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Subcategory")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("kpi_subcategory");
                });

            modelBuilder.Entity("kpi_feedback_from_scratch.Models.Domain.KPI_Assessor.KPI_Assessor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AssessorId")
                        .HasColumnType("int");

                    b.Property<string>("AssessorStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("KPI_AssignmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("kpi_assessor");
                });

            modelBuilder.Entity("kpi_feedback_from_scratch.Models.Domain.KPI_AssessorFeedback.KPI_AssessorFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AreaOfStrength")
                        .HasColumnType("longtext");

                    b.Property<string>("Improvement")
                        .HasColumnType("longtext");

                    b.Property<int>("KPI_AssessorId")
                        .HasColumnType("int");

                    b.Property<string>("rating")
                        .HasColumnType("longtext");

                    b.Property<int>("rating_type_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("kpi_assessor_feedback");
                });

            modelBuilder.Entity("kpi_feedback_from_scratch.Models.Domain.KPI_Assignment.KPI_Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Employee_Division_Id")
                        .HasColumnType("int");

                    b.Property<int>("Employee_Id")
                        .HasColumnType("int");

                    b.Property<int>("KPI_CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("KPI_Id")
                        .HasColumnType("int");

                    b.Property<int>("KPI_SubcategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .HasColumnType("longtext");

                    b.Property<int>("rating_frequency_id")
                        .HasColumnType("int");

                    b.Property<int>("rating_type_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("kpi_assignment");
                });

            modelBuilder.Entity("kpi_feedback_from_scratch.Models.Domain.KPI_Assignment.Rating_frequency.Rating_frequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("rating_frequency");
                });

            modelBuilder.Entity("kpi_feedback_from_scratch.Models.Domain.KPI_Assignment.Rating_type.Rating_type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("rating_type");
                });

            modelBuilder.Entity("kpi_feedback_from_scratch.Models.Domain.User.Designation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("designation");
                });

            modelBuilder.Entity("kpi_feedback_from_scratch.Models.Domain.User.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("division");
                });

            modelBuilder.Entity("kpi_feedback_from_scratch.Models.Domain.User.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("grade");
                });

            modelBuilder.Entity("kpi_feedback_from_scratch.Models.Domain.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("designationId")
                        .HasColumnType("int");

                    b.Property<int>("divisionId")
                        .HasColumnType("int");

                    b.Property<int?>("gradeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("user");
                });
#pragma warning restore 612, 618
        }
    }
}
